# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  website

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  DomainName:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. react-spa-starter.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Description: The full domain name e.g. www.react-spa-starter.com
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  AcmCertificateArn:
    Type: String
    Description: the Amazon Resource Name (ARN) of an AWS Certificate Manager (ACM) certificate.
    AllowedPattern: "arn:aws:acm:.*"

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true
      Cors:
        AllowMethods: "'DELETE,GET,OPTIONS,POST'"
        AllowHeaders: "'Accept,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Forwarded-For'"
        AllowOrigin: "'*'"
        # MaxAge: "'600'"
        # AllowCredentials: True
      Domain:
        DomainName: api.jwstanly.com
        CertificateArn: !Ref AcmCertificateArn
        EndpointConfiguration: EDGE

  helloFromLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: sam/handlers/hello-from-lambda.helloFromLambdaHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: A Lambda function that returns a static string.
      Policies:
        # Give Lambda basic execution Permission to the helloFromLambda
        - AWSLambdaBasicExecutionRole
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /helloWorld
            Method: GET
      Layers:
        - !Ref LambdaLibs

  LambdaLibs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambda-layer-lib
      Description: Dependencies for the lambda functions, seperate from the react frontend
      ContentUri: lambda-lib/.
      CompatibleRuntimes:
        - nodejs14.x
      Metadata:
        BuildMethod: makefile

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref Bucket, /*]]

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
    - Bucket # don't create cf distribution until S3 Bucket has been created
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to S3 bucket
        Origins:
        - DomainName: !Join ['', [!Ref DomainName, .s3.amazonaws.com]]
          Id: S3Origin
          S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true # deploy the distribution
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
        - !Join ['', ['*', !Ref 'DomainName', .com]]
        # - !Join ['', [!Ref 'FullDomainName', .com]] # route "www" version of domain to cloudfront as well
        DefaultCacheBehavior: # some defaults, not too important
          AllowedMethods:
          - GET
          - HEAD
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn # allow https
          SslSupportMethod: sni-only
        CustomErrorResponses: # want to direct any CF Distribution traffic to the S3 Bucket/React app
        - ErrorCachingMinTTL: 300
          ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html

  DNS: # allow access to React app via <DomainName>
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
      RecordSets:
      - Name: !Ref 'DomainName'
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 #https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
          DNSName: !GetAtt [CloudFrontDistribution, DomainName]

  DNSWithWWW: # allow access to React app via <FullDomainName>
      Type: AWS::Route53::RecordSetGroup
      Properties:
        HostedZoneName: !Join ['', [!Ref 'DomainName', .]]
        RecordSets:
        - Name: !Ref 'FullDomainName'
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html
            DNSName: !GetAtt [CloudFrontDistribution, DomainName]

Outputs:
  WebsiteURL:
    Value: !GetAtt
      - Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  CloudFrontDistributionEndpoint:
      Value: !GetAtt [CloudFrontDistribution, DomainName]
      Description: Endpoint for Cloudfront distribution
  FullDomain:
    Value: !Ref 'FullDomainName'
    Description: Full DomainName
